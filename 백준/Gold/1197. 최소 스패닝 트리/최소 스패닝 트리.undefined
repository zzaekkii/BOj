// 1197번 최소 스패닝 트리 - 골드4 / MST(크루스칼) 
#include <bits/stdc++.h>
using namespace std;

struct tp{
	int cost, a, b;
};

int V, E;
tp edge[100001];
int root[10001];

int cnt, ans;

void Init(){
	for(int i=0;i<10001;i++)
		root[i]=-1;
}

int Find(int x){
	if(root[x]<0)return x;
	return root[x]=Find(root[x]);
}

bool Union(int x, int y){
	int rootX=Find(x);
	int rootY=Find(y);
	if(rootX==rootY)return 0;
	
	int rankX=-(root[rootX]+1);
	int rankY=-(root[rootY]+1);
	if(rankX<rankY)
		root[rootX]=rootY;
	else{
		root[rootY]=rootX;
		if(rootX==rootY)
			root[rootX]--;
	}
	
	return 1;
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    Init();
    
    cin >> V >> E;
    
    for(int i=0;i<E;i++){
    	int A, B, cost;
    	cin >> A >> B >> cost;
    	edge[i]={cost,A,B};
	}
	
	sort(edge,edge+E,[](tp a,tp b){return a.cost<b.cost;});
	
	int idx=0;
	while(cnt<V-1){
		tp cur=edge[idx++];
		
		if(Union(cur.a,cur.b)){
			ans+=cur.cost;
			cnt++;
		}
	}
	
	cout << ans;
}