#include <bits/stdc++.h>
#define MAX 10000000001
typedef long long ll;
using namespace std;

int N, M, V, A, B, T;
bool view[100001];
bool visited[100001];
ll dist[100001];
vector<pair<int,int>> edges[100001];
priority_queue<pair<ll,int>,vector<pair<ll,int>>,greater<pair<ll,int>>> pq;

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> N >> M;
	
	for(int i=0;i<N;i++){
		cin >> V;
		view[i]=V;
		dist[i]=MAX;
	}
	view[N-1]=0;
		
	while(M--){
		cin >> A >> B >> T;
		if(view[A]||view[B])continue;
		
		edges[A].push_back({B,T});
		edges[B].push_back({A,T});
	}
	
	dist[0]=0;
	pq.push({0,0});
	while(!pq.empty()){
		ll cur_dist=pq.top().first;
		int cur_bifur=pq.top().second;
		pq.pop();
		
		if(visited[cur_bifur])continue;
		else visited[cur_bifur]=1;
		
		for(auto b: edges[cur_bifur]){
			int nxt_bifur=b.first;
			int nxt_dist=b.second;
			
			if(dist[nxt_bifur]>cur_dist+nxt_dist){
				dist[nxt_bifur]=cur_dist+nxt_dist;
				pq.push({dist[nxt_bifur],nxt_bifur});
			}
		}
	}
	
	if(dist[N-1]==MAX)cout << -1;
	else cout << dist[N-1];
}