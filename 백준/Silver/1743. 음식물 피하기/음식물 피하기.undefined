#include <bits/stdc++.h>
using namespace std;
#define X first
#define Y second

int N, M, K, R, C; 

bool board[101][101];
bool vis[101][101];

queue<pair<int,int>> Q;

int dx[4]={-1,0,1,0}, dy[4]={0,-1,0,1};

int mx, cnt;

int main(){
	ios::sync_with_stdio(0);cin.tie(0);
	
	cin >> N >> M >> K;
	
	while(K--){
		cin >> R >> C;
		board[R-1][C-1]=1;
	}
	
	for(int i=0;i<N;i++)
		for(int j=0;j<M;j++){
			if(!vis[i][j]&&board[i][j]){
				cnt=0;
				vis[i][j]=1;
				Q.push({i,j});
				
				while(!Q.empty()){ 
					pair<int,int> cur=Q.front(); Q.pop();
					cnt++;
					
					for(int dir=0;dir<4;dir++){
						int nx=cur.X+dx[dir];
						int ny=cur.Y+dy[dir];
						
						if(nx<0||nx>=N||ny<0||ny>=M)continue;
						if(vis[nx][ny]||!board[nx][ny])continue;
						
						vis[nx][ny]=1;
						Q.push({nx,ny}); 
					}
				}
			}
			mx=max(mx,cnt);
		}
	
	cout << mx;
}